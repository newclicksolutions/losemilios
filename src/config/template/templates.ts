import { TemplateHead } from '../../config/template/head';
import { TemplateFooter } from '../../config/template/footer';
export class TemplateClient {
  toFixed: any;
   head ='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html data-editor-version="2" class="sg-campaigns" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1" /><meta http-equiv="X-UA-Compatible" content="IE=Edge" /><style type="text/css">body,p,div{font-family:verdana,geneva,sans-serif;font-size:16px}b{color: #a2bc30;}body{color:#516775}body .cancelada{color:red;} a{color:#930;text-decoration:none}p{margin:0;padding:0}table.wrapper{width:100% !important;table-layout:fixed;-webkit-font-smoothing:antialiased;-webkit-text-size-adjust:100%;-moz-text-size-adjust:100%;-ms-text-size-adjust:100%}img.max-width{max-width:100% !important}.column.of-2{width:50%}.column.of-3{width:33.333%}.column.of-4{width:25%}@media screen and (max-width: 480px){.preheader .rightColumnContent, .footer .rightColumnContent{text-align:left !important}.preheader .rightColumnContent div, .preheader .rightColumnContent span, .footer .rightColumnContent div, .footer .rightColumnContent span{text-align:left !important}.preheader .rightColumnContent, .preheader .leftColumnContent{font-size:80% !important;padding:5px 0}table.wrapper-mobile{width:100% !important;table-layout:fixed}img.max-width{height:auto !important;max-width:100% !important}a.bulletproof-button{display:block !important;width:auto !important;font-size:80%;padding-left:0 !important;padding-right:0 !important}.columns{width:100% !important}.column{display:block !important;width:100% !important;padding-left:0 !important;padding-right:0 !important;margin-left:0 !important;margin-right:0 !important}}</style></head><body><center class="wrapper" data-link-color="#993300" data-body-style="font-size:16px; font-family:verdana,geneva,sans-serif; color:#516775; background-color:#F9F5F2;"><div class="webkit"><table cellpadding="0" cellspacing="0" border="0" width="100%" class="wrapper" bgcolor="#F9F5F2"><tbody><tr><td valign="top" bgcolor="#F9F5F2" width="100%"><table width="100%" role="content-container" class="outer" align="center" cellpadding="0" cellspacing="0" border="0"><tbody><tr><td width="100%"><table width="100%" cellpadding="0" cellspacing="0" border="0"><tbody><tr><td><table width="100%" cellpadding="0" cellspacing="0" border="0" style="width: 100%; max-width: 600px;" align="center"><tbody><tr><td role="modules-container" style=" padding: 0px 0px 0px 0px; color: #516775; text-align: left; " bgcolor="#F9F5F2" width="100%" align="left"><table class="module preheader preheader-hide" role="module" data-type="preheader" border="0" cellpadding="0" cellspacing="0" width="100%" style=" display: none !important; visibility: hidden; opacity: 0; color: transparent; height: 0; width: 0; "><tbody><tr><td role="module-content"><p></p></td></tr></tbody></table><table class="wrapper" role="module" data-type="image" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="4UqFsRLozLcypAAv4CeoFS"><tbody><tr><td style=" font-size: 6px; line-height: 10px; padding: 30px 0px 0px 0px; " valign="top" align="center"> <img class="max-width" border="0" style=" display: block; color: #000000; text-decoration: none; font-family: Helvetica, arial, sans-serif; font-size: 16px; max-width: 50% !important; width: 50%; height: auto !important; " src="https://acre-appfront.herokuapp.com/_nuxt/img/1ce76eb.png" alt="Acre" width="300" data-responsive="true" data-proportionally-constrained="false" /></td></tr></tbody></table>';
   fooder ='<table class="module" role="module" data-type="divider" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="jw3c3eYnz3qZ2aqby3rNPX"><tbody><tr><td style=" padding: 0px 0px 0px 0px; " role="module-content" height="100%" valign="top" bgcolor=""><table border="0" cellpadding="0" cellspacing="0" align="center" width="100%" height="10px" style=" line-height: 10px; font-size: 10px; "><tbody><tr><td style=" padding: 0px 0px 10px 0px; " bgcolor="#ffffff"></td></tr></tbody></table></td></tr></tbody></table><table class="module" role="module" data-type="divider" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="noLZCGp2Fg6viPoP15ufF1"><tbody><tr><td style=" padding: 0px 0px 0px 0px; " role="module-content" height="100%" valign="top" bgcolor=""><table border="0" cellpadding="0" cellspacing="0" align="center" width="100%" height="10px" style=" line-height: 10px; font-size: 10px; "><tbody><tr><td style=" padding: 0px 0px 10px 0px; " bgcolor="#ffffff"></td></tr></tbody></table></td></tr></tbody></table><table class="module" role="module" data-type="spacer" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="aQTmVGoZvs6GLJLWsiastG"><tbody><tr><td style=" padding: 0px 0px 40px 0px; " role="module-content" bgcolor=""></td></tr></tbody></table><table class="module" role="module" data-type="social" align="center" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="sLpvVMcymGiSrXMXabUBds"><tbody><tr><td valign="top" style=" padding: 0px 0px 0px 0px; font-size: 6px; line-height: 10px; background-color: #f9f5f2; " align="center"></td></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></center></body></html>'
   
  Orders(state,data,message) {
    let  shiping = JSON.parse(data.shipping)
    let table = ''
    for (let index = 0; index < data.orderproduct.length; index++) {
      const element = data.orderproduct[index];
      table = table + '<tr><td>'+element.name+'</td><td>Ref: '+element.sku+'</td><td>'+element.quantity+' '+element.unit+'</td><td><b>$'+this.formatprice((element.price))+'</b></td></tr><tr><td>'+element.nota+'</td></tr>'
    }
    switch (state) {
      case 'Creado':
  return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "><strong>'+data.Restaurant.name == null ? data.User.name : data.Restaurant.name+'</strong></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+message+'</span></div> <br><ul><li style=" text-align: inherit; "> Pedido #'+data.order_id+'</li><li style=" text-align: inherit; "> <span style=" font-family: verdana, geneva, sans-serif; ">Realizado: '+this.formatdate(data.order_date)+'</span></li><li style=" text-align: inherit; "> <span  style=" font-family: verdana, geneva, sans-serif; ">Estado:<b class="'+data.OrderStatus.status+'"> '+data.OrderStatus.status+'</b></span></li></ul> <br><div> <span style=" font-family: verdana, geneva, sans-serif; "><b>DIRECCIÓN DE ENTREGA</b></span><table style="width:100%"><tr><td>'+shiping[0].address+'</td><td>Tel: '+shiping[0].phone+'</td><td>Destino: '+shiping[0].deliver_to+'</td></tr></table></div> <br><div> <span style=" font-family: verdana, geneva, sans-serif; "><b>RESEMEN DE PRODUCTOS</b></span><table style="width: 100%;border: 1px #afafaf solid;background: #eaeaea;">'+table+'</table><br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "> Subtotal: $'+this.formatprice(data.total_sale)+'</span> <br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "> Iva: $'+this.formatprice(data.tax_amount)+' </span> <br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "><b>Total: $'+this.formatprice((parseInt(data.total_sale) + parseInt(data.tax_amount)))+'</b></span></div></div></td></tr></tbody></table>'+this.fooder)  
   break;
      case 'Actualizado':
        return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "><strong>'+data.Restaurant.name == null ? data.User.name : data.Restaurant.name+'</strong></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+message+'</span></div> <br><ul><li style=" text-align: inherit; "> Pedido #'+data.order_id+'</li><li style=" text-align: inherit; "> <span style=" font-family: verdana, geneva, sans-serif; ">Realizado: '+this.formatdate(data.order_date)+'</span></li><li style=" text-align: inherit; "> <span  style=" font-family: verdana, geneva, sans-serif; ">Estado:<b class="'+data.OrderStatus.status+'"> '+data.OrderStatus.status+'</b></span></li></ul> <br><div> <span style=" font-family: verdana, geneva, sans-serif; "><b>DIRECCIÓN DE ENTREGA</b></span><table style="width:100%"><tr><td>'+shiping[0].address+'</td><td>Tel: '+shiping[0].phone+'</td><td>Destino: '+shiping[0].deliver_to+'</td></tr></table></div> <br><div> <span style=" font-family: verdana, geneva, sans-serif; "><b>RESEMEN DE PRODUCTOS</b></span><table style="width: 100%;border: 1px #afafaf solid;background: #eaeaea;">'+table+'</table><br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "> Subtotal: $'+this.formatprice(data.total_sale)+'</span> <br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "> Iva: $'+this.formatprice(data.tax_amount)+' </span> <br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "><b>Total: $'+this.formatprice((parseInt(data.total_sale) + parseInt(data.tax_amount)))+'</b></span></div></div></td></tr></tbody></table>'+this.fooder)
      break;
      default:
        break;
    }
    }

    OrdersAdmin(state,data,message) {
      let  shiping = JSON.parse(data.shipping)
      let table = ''
      for (let index = 0; index < data.orderproduct.length; index++) {
        const element = data.orderproduct[index];
        table = table + '<tr><td>'+element.name+'</td><td>Ref: '+element.sku+'</td><td>'+element.quantity+' '+element.unit+'</td><td><b>$'+this.formatprice((element.price))+'</b></td></tr><tr><td>'+element.nota+'</td></tr>'
      }
      switch (state) {
        case 'Creado':
    return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+message+'</span></div> <br><ul><li style=" text-align: inherit; "> Pedido #'+data.order_id+'</li><li style=" text-align: inherit; "> <span style=" font-family: verdana, geneva, sans-serif; ">Realizado: '+this.formatdate(data.order_date)+'</span></li><li style=" text-align: inherit; "> <span  style=" font-family: verdana, geneva, sans-serif; ">Estado:<b class="'+data.OrderStatus.status+'"> '+data.OrderStatus.status+'</b></span></li></ul> <br><div> <span style=" font-family: verdana, geneva, sans-serif; "><b>DIRECCIÓN DE ENTREGA</b></span><table style="width:100%"><tr><td>'+shiping[0].address+'</td><td>Tel: '+shiping[0].phone+'</td><td>Destino: '+shiping[0].deliver_to+'</td></tr></table></div> <br><div> <span style=" font-family: verdana, geneva, sans-serif; "><b>RESEMEN DE PRODUCTOS</b></span><table style="width: 100%;border: 1px #afafaf solid;background: #eaeaea;">'+table+'</table><br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "> Subtotal: $'+this.formatprice(data.total_sale)+'</span> <br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "> Iva: $'+this.formatprice(data.tax_amount)+' </span> <br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "><b>Total: $'+this.formatprice((parseInt(data.total_sale) + parseInt(data.tax_amount)))+'</b></span></div></div></td></tr></tbody></table>'+this.fooder)  
     break;
        case 'Actualizado':
          return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+message+'</span></div> <br><ul><li style=" text-align: inherit; "> Pedido #'+data.order_id+'</li><li style=" text-align: inherit; "> <span style=" font-family: verdana, geneva, sans-serif; ">Realizado: '+this.formatdate(data.order_date)+'</span></li><li style=" text-align: inherit; "> <span  style=" font-family: verdana, geneva, sans-serif; ">Estado:<b class="'+data.OrderStatus.status+'"> '+data.OrderStatus.status+'</b></span></li></ul> <br><div> <span style=" font-family: verdana, geneva, sans-serif; "><b>DIRECCIÓN DE ENTREGA</b></span><table style="width:100%"><tr><td>'+shiping[0].address+'</td><td>Tel: '+shiping[0].phone+'</td><td>Destino: '+shiping[0].deliver_to+'</td></tr></table></div> <br><div> <span style=" font-family: verdana, geneva, sans-serif; "><b>RESEMEN DE PRODUCTOS</b></span><table style="width: 100%;border: 1px #afafaf solid;background: #eaeaea;">'+table+'</table><br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "> Subtotal: $'+this.formatprice(data.total_sale)+'</span> <br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "> Iva: $'+this.formatprice(data.tax_amount)+' </span> <br> <span style=" font-family: verdana, geneva, sans-serif; float: right; "><b>Total: $'+this.formatprice((parseInt(data.total_sale) + parseInt(data.tax_amount)))+'</b></span></div></div></td></tr></tbody></table>'+this.fooder)
        break;
        default:
          break;
      }
      }

      transaccion(data,orderid) {
      return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "><strong> Su pago fue '+data.transaction_state_label+'</strong></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">Detalles de la transacción!</span></div> <br><ul><li style=" text-align: inherit; "> Pedido #'+orderid+'</li><li style=" text-align: inherit; "> <span style=" font-family: verdana, geneva, sans-serif; ">Fecha Transacción: '+this.formatdate(data.created)+'</span></li><li style=" text-align: inherit; "> <span style=" font-family: verdana, geneva, sans-serif; ">Metodo de pago: '+data.lap_payment_method+' </span></li><li style=" text-align: inherit; "> <span style=" font-family: verdana, geneva, sans-serif; ">Total: $'+this.formatprice(data.tx_value)+'</span></li></ul> <br></div></td></tr></tbody></table>'+this.fooder)  
        }

      users(state,data,message,bodymessage) {
          switch (state) {
            case 'Creado':
        return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "><strong>Hola '+data.name+'</strong></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+message+'</span></div> <br><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+bodymessage+'</span></div> <br></div></td></tr></tbody></table>'+this.fooder)  
         break;
            case 'Actualizado':
              return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "><strong>Hola '+data.name+'</strong></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+message+'</span></div> <br><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+bodymessage+'</span></div> <br></div></td></tr></tbody></table>'+this.fooder)
            break;
            default:
              break;
          }
          }

          usersAdmin(state,data,message,bodymessage) {
            switch (state) {
              case 'Creado':
          return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "><strong></strong></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+message+'</span></div> <br><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+bodymessage+'</span></div> <br></div></td></tr></tbody></table>'+this.fooder)  
           break;
              case 'Actualizado':
                return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "><strong></strong></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+message+'</span></div> <br><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+bodymessage+'</span></div> <br></div></td></tr></tbody></table>'+this.fooder)
              break;
              default:
                break;
            }
            }

            resetpassword(data,message,bodymessage) {
            return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "><strong>Hola '+data.name+'</strong></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+message+'</span></div> <br><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+bodymessage+'</span></div> <br></div></td></tr></tbody></table>'+this.fooder)  
              }
              import(data,message,bodymessage) {
                return (this.head+'<table class="module" role="module" data-type="text" border="0" cellpadding="0" cellspacing="0" width="100%" style="table-layout: fixed;" data-muid="keQHYG1b1ztewxwhDtuCpS"><tbody><tr><td style=" background-color: #ffffff; padding: 50px 0px 10px 0px; line-height: 30px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" color: #516775; font-size: 28px; font-family: georgia, serif; "><strong>Hola '+data+'</strong></span></div><div></div></div></td></tr><tr><td style=" background-color: #ffffff; padding: 10px 40px 20px 40px; line-height: 22px; text-align: inherit; " height="100%" valign="top" bgcolor="#ffffff"><div><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+message+'</span></div> <br><div style=" font-family: inherit; text-align: center; "> <span style=" font-family: verdana, geneva, sans-serif; ">'+bodymessage+'</span></div> <br></div></td></tr></tbody></table>'+this.fooder)  
                  }

  formatdate(date) {
    let current_datetime = new Date(date);
    let formatted_date =
      current_datetime.getDate() +
      '/' +
      (current_datetime.getMonth() + 1) +
      '/' +
      current_datetime.getFullYear();
    return formatted_date;
  }
  formatprice(x) {
    return x.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,'); ;
};
}
